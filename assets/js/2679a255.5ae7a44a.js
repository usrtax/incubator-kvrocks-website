"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[209],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,h=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6691:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},c="Replication of rocksdb data",s={unversionedId:"Design/replication",id:"Design/replication",title:"Replication of rocksdb data",description:"A instance is turned into a slave role when SLAVEOF cmd is received. Slave will",source:"@site/docs/04-Design/01-replication.md",sourceDirName:"04-Design",slug:"/Design/replication",permalink:"/docs/Design/replication",draft:!1,editUrl:"https://github.com/apache/incubator-kvrocks-website/tree/main/docs/04-Design/01-replication.md",tags:[],version:"current",lastUpdatedBy:"Ruixiang Tan",lastUpdatedAt:1662905954,formattedLastUpdatedAt:"9/11/2022",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Design Complex Structure On Rocksdb",permalink:"/docs/Design/design-structure-on-rocksdb"},next:{title:"Kvrocks Exporter",permalink:"/docs/Tools/kvrocks-exporter"}},p={},u=[{value:"Replication State Machine",id:"replication-state-machine",level:2},{value:"Partial Synchronization (PSYNC)",id:"partial-synchronization-psync",level:2},{value:"Full Synchronization",id:"full-synchronization",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"replication-of-rocksdb-data"},"Replication of rocksdb data"),(0,i.kt)("p",null,"A instance is turned into a slave role when ",(0,i.kt)("inlineCode",{parentName:"p"},"SLAVEOF")," cmd is received. Slave will\ntry to do a partial synchronization (AKA. incremental replication) if it is viable,\nOtherwise, slave will do a full-sync by copying all the rocksdb's latest backup files.\nAfter the full-sync is finished, the slave's DB will be erased and restored using\nthe backup files downloaded from master, then partial-sync is triggered again."),(0,i.kt)("p",null,"If everything go OK, the partial-sync is a ongoing procedure that keep receiving\nevery batch the master gets."),(0,i.kt)("h2",{id:"replication-state-machine"},"Replication State Machine"),(0,i.kt)("p",null,"A state machine is used in the slave's replication thread to accommodate the complexity."),(0,i.kt)("p",null,"On the slave side, replication is composed of the following steps:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Send Auth"),(0,i.kt)("li",{parentName:"ol"},"Send db","_","name to check if the master has the right DB"),(0,i.kt)("li",{parentName:"ol"},"Try PSYNC, if succeeds, slave is in the loop of receiving batches; if not, go to ",(0,i.kt)("inlineCode",{parentName:"li"},"4")),(0,i.kt)("li",{parentName:"ol"},"Do FULLSYNC\n4.1. send _fetch_meta to get the latest backup meta data\n4.2. send _fetch_file to get all the backup files listed in the meta\n4.3. restore slave's DB using the backup"),(0,i.kt)("li",{parentName:"ol"},"goto ",(0,i.kt)("inlineCode",{parentName:"li"},"1"))),(0,i.kt)("h2",{id:"partial-synchronization-psync"},"Partial Synchronization (PSYNC)"),(0,i.kt)("p",null,"PSYNC takes advantage of the rocksdb's WAL iterator. If the PSYNC's requesting sequence\nnumber is in the range of the WAL files, PSYNC is considered viable."),(0,i.kt)("p",null,"PSYNC is a command implemented on master role instance. Unlike other commands (eg. GET),\nPSYNC cmd is not a REQ-RESP command, but a REQ-RESP-RESP style. That's the response never\nends once the req is accepted."),(0,i.kt)("p",null,"so PSYNC has two main parts in the code:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A: libevent callback for sending the batches when the WAL iterator has new data."),(0,i.kt)("li",{parentName:"ul"},"B: timer callback, when A quited because of the exhaustion of the WAL data, timer cb\nwill check if WAL has new data available from time to time, so to awake the A again.")),(0,i.kt)("h2",{id:"full-synchronization"},"Full Synchronization"),(0,i.kt)("p",null,"On the master side, to support full synchronization, master must create a rocksdb backup\nevery time the ",(0,i.kt)("inlineCode",{parentName:"p"},"_fetch_meta")," request is received."),(0,i.kt)("p",null,"On the slave side, after retrieving the meta data, the slave can fetch every file listed in\nthe meta data (skip if already existed), and restore the backup. to accelerate a bit, file\nfetching is executed in parallel."))}f.isMDXComponent=!0}}]);