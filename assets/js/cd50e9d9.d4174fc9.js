"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[968],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=c(n),k=r,d=h["".concat(o,".").concat(k)]||h[k]||p[k]||i;return n?a.createElement(d,l(l({ref:t},u),{},{components:n})):a.createElement(d,l({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=h;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7839:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],s={title:"How to verify release",sidebar_position:3},o=void 0,c={unversionedId:"how-to-verify",id:"how-to-verify",title:"How to verify release",description:"To verify the release, the following checklist can be used to reference:",source:"@site/community/how-to-verify.md",sourceDirName:".",slug:"/how-to-verify",permalink:"/community/how-to-verify",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"How to verify release",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"How to release",permalink:"/community/how-to-release"}},u={},p=[{value:"Download the release package to be verified to the local environment",id:"download-the-release-package-to-be-verified-to-the-local-environment",level:2},{value:"Verify signature and hash",id:"verify-signature-and-hash",level:2},{value:"Check if the release package is complete",id:"check-if-the-release-package-is-complete",level:3},{value:"Verify signature and hash",id:"verify-signature-and-hash-1",level:3},{value:"Check the file content of the source package",id:"check-the-file-content-of-the-source-package",level:3}],h={toc:p};function k(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To verify the release, the following checklist can be used to reference:"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Download links are valid."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Checksums and PGP signatures are valid."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Source code artifacts have correct names matching the current release."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","LICENSE and NOTICE files are correct for the repository."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","All files have license headers if necessary."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Building is OK.")),(0,i.kt)("h2",{id:"download-the-release-package-to-be-verified-to-the-local-environment"},"Download the release package to be verified to the local environment"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},'Use the following command to download all artifacts, replace "${release_version}-${rc_version}" with the version ID of the version to be released:'),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"svn co https://dist.apache.org/repos/dist/dev/incubator/kvrocks/${release_version}-${rc_version}/\n"))),(0,i.kt)("h2",{id:"verify-signature-and-hash"},"Verify signature and hash"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Start the verification process, which includes but is not limited to the following content and verification methods.\nGnuPG is recommended, which can install by yum install gnupg or apt-get install gnupg.")),(0,i.kt)("h3",{id:"check-if-the-release-package-is-complete"},"Check if the release package is complete"),(0,i.kt)("p",null,"The package to release must check:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Whether to include the source code package"),(0,i.kt)("li",{parentName:"ul"},"Whether to include the signature of the source code package"),(0,i.kt)("li",{parentName:"ul"},"Whether to include the sha512 of the source code package"),(0,i.kt)("li",{parentName:"ul"},"(if include) Check the binary package, also check the contents listed in (2)-(4)")),(0,i.kt)("h3",{id:"verify-signature-and-hash-1"},"Verify signature and hash"),(0,i.kt)("p",null,"GnuPG is recommended, which can install by yum install GnuPG or apt-get install GnuPG."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Import public key",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"curl https://downloads.apache.org/incubator/kvrocks/KEYS > KEYS # Download KEYS\ngpg --import KEYS # Import KEYS to local\n"))),(0,i.kt)("li",{parentName:"ul"},"Trust the public key",(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"Trust the KEY used in this version")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"gpg --edit-key xxxxxxxxxx                           # KEY used in this version\n\ngpg (GnuPG) 2.3.6; Copyright (C) 2021 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nSecret key is available.\n\nsec  rsa4096/A3008E49B00F626B\n     created: 2022-07-12  expires: never       usage: SC\n     trust: ultimate      validity: ultimate\nssb  rsa4096/DD4049061341F808\n     created: 2022-07-12  expires: never       usage: E\n[ultimate] (1). hulk <hulk@apache.org>\n\ngpg> trust\nsec  rsa4096/A3008E49B00F626B\n     created: 2022-07-12  expires: never       usage: SC\n     trust: ultimate      validity: ultimate\nssb  rsa4096/DD4049061341F808\n     created: 2022-07-12  expires: never       usage: E\n[ultimate] (1). hulk <hulk@apache.org>\n\nPlease decide how far you trust this user to correctly verify other users' keys\n(by looking at passports, checking fingerprints from different sources, etc.)\n\n  1 = I don't know or won't say\n  2 = I do NOT trust\n  3 = I trust marginally\n  4 = I trust fully\n  5 = I trust ultimately\n  m = back to the main menu\n\nYour decision? 5\nDo you really want to set this key to ultimate trust? (y/N) y\n\nsec  rsa4096/A3008E49B00F626B\n     created: 2022-07-12  expires: never       usage: SC\n     trust: ultimate      validity: ultimate\nssb  rsa4096/DD4049061341F808\n     created: 2022-07-12  expires: never       usage: E\n[ultimate] (1). hulk <hulk@apache.org>\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Check signature and hash")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Save below shell codes to file ",(0,i.kt)("inlineCode",{parentName:"li"},"release-verify.sh"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'#!/bin/sh\nYELLOW="\\033[37;1m"\nGREEN="\\033[32;1m"\nENDCOLOR="\\033[0m"\n\nif [ "$#" -ne 1 ]; then\n  echo "Usage: $0 {YOUR RELEASE TAR FILE}" >&2\n  exit 1\nfi\n\nPKG=$1\n\nif [ ! -f "$PKG" ]; then\n    echo "File \'$PKG\' does not exist."\n    exit 1\nfi\n\n#gpg --armor --output "$PKG.asc" --detach-sig $PKG\ngpg --verify "$PKG.asc" $PKG\n\nif [ $? -eq 0 ]\nthen\n    printf $GREEN"Success to verify the gpg sign"$ENDCOLOR"\\n"\nelse\n    printf $YELLOW"Failed to verify the gpg sign"$ENDCOLOR"\\n"\nfi\n\n#shasum -a 512 $PKG > "$PKG.sha512"\nshasum -a 512 -c "$PKG.sha512"\n\nif [ $? -eq 0 ]\nthen\n    printf $GREEN"Success to verify the checksum"$ENDCOLOR"\\n"\nelse\n    printf $YELLOW"Failed to verify the checksum"$ENDCOLOR"\\n"\nfi\n\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"verify the sign and checksum")),(0,i.kt)("p",null,"./release-verify.sh apache-kvrocks-${release_version}-src.tar.gz "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'gpg: Signature made \u4e00  7/18 13:44:27 2022 CST\ngpg:                using RSA key F77B887A4F25A9468C513E9AA3008E49B00F626B\ngpg: Good signature from "hulk <hulk@apache.org>" [ultimate]\n')),(0,i.kt)("h3",{id:"check-the-file-content-of-the-source-package"},"Check the file content of the source package"),(0,i.kt)("p",null,"Unzip ",(0,i.kt)("inlineCode",{parentName:"p"},"apache-kvrocks-${release_version}-src.tar.gz")," and check as follows:"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","LICENSE and NOTICE files are correct for the repository."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","All files have ASF license headers if necessary."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Building is OK.")))}k.isMDXComponent=!0}}]);